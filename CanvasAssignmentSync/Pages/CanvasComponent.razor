@using CanvasAssignmentSync.Data
@inject ICanvasService CanvasService
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

@*
<EditForm Model="@_settings.Model" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <h3>Canvas Settings</h3>
    <div class="row">
        <label>
            API URI
            <InputText class="form-control" id="apiuri" @bind-Value="_settings.Model.APIURI"></InputText>
        </label>
    </div>

    <div class=row>
    <label>
        API Key
        <InputText class="form-control" id="apikey" @bind-Value="_settings.Model.APIKey"></InputText>
    </label>
    </div>
    
    <button type="submit" class="btn btn-primary">Apply</button>

    <ValidationSummary/>

</EditForm>*@
<CanvasTextInputComponent></CanvasTextInputComponent>

<CourseGridComponent></CourseGridComponent>
@code {
    // TODO bæta við takka til að fá token

    private List<Course>? courseList;
    private CancellationTokenSource cancellationTokenSource = new CancellationTokenSource();
    public void Dispose()
    {
        cancellationTokenSource?.Cancel();
        cancellationTokenSource?.Dispose();
    }

    protected override void OnInitialized()
    {
    }

    protected override async Task OnInitializedAsync()
    {
        courseList = await CanvasService.GetCourses(cancellationTokenSource.Token);
    }
    

    private void HandleValidSubmit()
    {

        // TODO skrifa courselist
    }
}
